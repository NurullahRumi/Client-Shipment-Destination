/*Copyright (c) 2018-2019 cmt.mu All Rights Reserved.
 This software is the confidential and proprietary information of cmt.mu You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with cmt.mu*/
package com.mu.cmt.pfs.pfsdb.models.procedure;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Objects;

import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class ProcOc1000pk0FreightgetCostDetailsResponsePoutCostDetails implements Serializable {


    @ColumnAlias("CTYCOD")
    private String ctycod;

    @ColumnAlias("SHPTYP")
    private String shptyp;

    @ColumnAlias("FREIGHTSEQNR")
    private Short freightseqnr;

    @ColumnAlias("FORWARDERN")
    private String forwardern;

    @ColumnAlias("SHPDEST")
    private String shpdest;

    @ColumnAlias("ITEMCAT")
    private String itemcat;

    @ColumnAlias("ITEMDES")
    private String itemdes;

    @ColumnAlias("CONTAINER_TYPE")
    private String containerType;

    @ColumnAlias("QTYUOM")
    private String qtyuom;

    @ColumnAlias("QTYUOM2")
    private String qtyuom2;

    @ColumnAlias("QTYFROM")
    private Double qtyfrom;

    @ColumnAlias("QTYTO")
    private Double qtyto;

    @ColumnAlias("CALCMETHOD")
    private String calcmethod;

    @ColumnAlias("CCYCOD")
    private String ccycod;

    @ColumnAlias("CURPERUNIT")
    private Double curperunit;

    @ColumnAlias("MODID")
    private String modid;

    @ColumnAlias("MODDAT")
    private LocalDateTime moddat;

    @ColumnAlias("FREIGHTSTS")
    private String freightsts;

    @ColumnAlias("SHPDESTCTYCOD")
    private String shpdestctycod;

    @ColumnAlias("CURPERITEM_MINIMUM")
    private Double curperitemMinimum;

    @ColumnAlias("CALC_PERCENT")
    private Double calcPercent;

    @ColumnAlias("CALC_SUBTOTALTYP")
    private String calcSubtotaltyp;

    @ColumnAlias("SUBTOTALTYP")
    private String subtotaltyp;

    @ColumnAlias("SORTSEQ")
    private Short sortseq;

    public String getCtycod() {
        return this.ctycod;
    }

    public void setCtycod(String ctycod) {
        this.ctycod = ctycod;
    }

    public String getShptyp() {
        return this.shptyp;
    }

    public void setShptyp(String shptyp) {
        this.shptyp = shptyp;
    }

    public Short getFreightseqnr() {
        return this.freightseqnr;
    }

    public void setFreightseqnr(Short freightseqnr) {
        this.freightseqnr = freightseqnr;
    }

    public String getForwardern() {
        return this.forwardern;
    }

    public void setForwardern(String forwardern) {
        this.forwardern = forwardern;
    }

    public String getShpdest() {
        return this.shpdest;
    }

    public void setShpdest(String shpdest) {
        this.shpdest = shpdest;
    }

    public String getItemcat() {
        return this.itemcat;
    }

    public void setItemcat(String itemcat) {
        this.itemcat = itemcat;
    }

    public String getItemdes() {
        return this.itemdes;
    }

    public void setItemdes(String itemdes) {
        this.itemdes = itemdes;
    }

    public String getContainerType() {
        return this.containerType;
    }

    public void setContainerType(String containerType) {
        this.containerType = containerType;
    }

    public String getQtyuom() {
        return this.qtyuom;
    }

    public void setQtyuom(String qtyuom) {
        this.qtyuom = qtyuom;
    }

    public String getQtyuom2() {
        return this.qtyuom2;
    }

    public void setQtyuom2(String qtyuom2) {
        this.qtyuom2 = qtyuom2;
    }

    public Double getQtyfrom() {
        return this.qtyfrom;
    }

    public void setQtyfrom(Double qtyfrom) {
        this.qtyfrom = qtyfrom;
    }

    public Double getQtyto() {
        return this.qtyto;
    }

    public void setQtyto(Double qtyto) {
        this.qtyto = qtyto;
    }

    public String getCalcmethod() {
        return this.calcmethod;
    }

    public void setCalcmethod(String calcmethod) {
        this.calcmethod = calcmethod;
    }

    public String getCcycod() {
        return this.ccycod;
    }

    public void setCcycod(String ccycod) {
        this.ccycod = ccycod;
    }

    public Double getCurperunit() {
        return this.curperunit;
    }

    public void setCurperunit(Double curperunit) {
        this.curperunit = curperunit;
    }

    public String getModid() {
        return this.modid;
    }

    public void setModid(String modid) {
        this.modid = modid;
    }

    public LocalDateTime getModdat() {
        return this.moddat;
    }

    public void setModdat(LocalDateTime moddat) {
        this.moddat = moddat;
    }

    public String getFreightsts() {
        return this.freightsts;
    }

    public void setFreightsts(String freightsts) {
        this.freightsts = freightsts;
    }

    public String getShpdestctycod() {
        return this.shpdestctycod;
    }

    public void setShpdestctycod(String shpdestctycod) {
        this.shpdestctycod = shpdestctycod;
    }

    public Double getCurperitemMinimum() {
        return this.curperitemMinimum;
    }

    public void setCurperitemMinimum(Double curperitemMinimum) {
        this.curperitemMinimum = curperitemMinimum;
    }

    public Double getCalcPercent() {
        return this.calcPercent;
    }

    public void setCalcPercent(Double calcPercent) {
        this.calcPercent = calcPercent;
    }

    public String getCalcSubtotaltyp() {
        return this.calcSubtotaltyp;
    }

    public void setCalcSubtotaltyp(String calcSubtotaltyp) {
        this.calcSubtotaltyp = calcSubtotaltyp;
    }

    public String getSubtotaltyp() {
        return this.subtotaltyp;
    }

    public void setSubtotaltyp(String subtotaltyp) {
        this.subtotaltyp = subtotaltyp;
    }

    public Short getSortseq() {
        return this.sortseq;
    }

    public void setSortseq(Short sortseq) {
        this.sortseq = sortseq;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ProcOc1000pk0FreightgetCostDetailsResponsePoutCostDetails)) return false;
        final ProcOc1000pk0FreightgetCostDetailsResponsePoutCostDetails procOc1000pk0freightgetCostDetailsResponsePoutCostDetails = (ProcOc1000pk0FreightgetCostDetailsResponsePoutCostDetails) o;
        return Objects.equals(getCtycod(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getCtycod()) &&
                Objects.equals(getShptyp(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getShptyp()) &&
                Objects.equals(getFreightseqnr(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getFreightseqnr()) &&
                Objects.equals(getForwardern(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getForwardern()) &&
                Objects.equals(getShpdest(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getShpdest()) &&
                Objects.equals(getItemcat(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getItemcat()) &&
                Objects.equals(getItemdes(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getItemdes()) &&
                Objects.equals(getContainerType(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getContainerType()) &&
                Objects.equals(getQtyuom(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getQtyuom()) &&
                Objects.equals(getQtyuom2(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getQtyuom2()) &&
                Objects.equals(getQtyfrom(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getQtyfrom()) &&
                Objects.equals(getQtyto(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getQtyto()) &&
                Objects.equals(getCalcmethod(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getCalcmethod()) &&
                Objects.equals(getCcycod(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getCcycod()) &&
                Objects.equals(getCurperunit(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getCurperunit()) &&
                Objects.equals(getModid(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getModid()) &&
                Objects.equals(getModdat(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getModdat()) &&
                Objects.equals(getFreightsts(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getFreightsts()) &&
                Objects.equals(getShpdestctycod(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getShpdestctycod()) &&
                Objects.equals(getCurperitemMinimum(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getCurperitemMinimum()) &&
                Objects.equals(getCalcPercent(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getCalcPercent()) &&
                Objects.equals(getCalcSubtotaltyp(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getCalcSubtotaltyp()) &&
                Objects.equals(getSubtotaltyp(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getSubtotaltyp()) &&
                Objects.equals(getSortseq(), procOc1000pk0freightgetCostDetailsResponsePoutCostDetails.getSortseq());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCtycod(),
                getShptyp(),
                getFreightseqnr(),
                getForwardern(),
                getShpdest(),
                getItemcat(),
                getItemdes(),
                getContainerType(),
                getQtyuom(),
                getQtyuom2(),
                getQtyfrom(),
                getQtyto(),
                getCalcmethod(),
                getCcycod(),
                getCurperunit(),
                getModid(),
                getModdat(),
                getFreightsts(),
                getShpdestctycod(),
                getCurperitemMinimum(),
                getCalcPercent(),
                getCalcSubtotaltyp(),
                getSubtotaltyp(),
                getSortseq());
    }
}